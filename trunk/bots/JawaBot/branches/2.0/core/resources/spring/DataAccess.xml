<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


  <!-- JDBC Datasource -->
  <bean id="simpleDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driver}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>

  <bean id="dataSourcePool" class="org.apache.commons.pool.impl.GenericObjectPool">
    <property name="minEvictableIdleTimeMillis" value="300000" />
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <!--<property name="numTestsPerEvictionRun" value="2" />-->
    <property name="minIdle" value="5" />
    <property name="maxIdle" value="10" />
    <property name="testOnBorrow" value="true" />
    <property name="testOnReturn" value="true" />
    <property name="testWhileIdle" value="true" />
    <property name="maxActive" value="50" />
    <property name="maxWait" value="-1" />
  </bean>

  <bean id="connectionFactory" class="org.apache.commons.dbcp.DataSourceConnectionFactory">
    <constructor-arg><ref bean="simpleDataSource"/></constructor-arg>
  </bean>

  <bean id="poolableConnectionFactory" class="org.apache.commons.dbcp.PoolableConnectionFactory">
    <constructor-arg index="0"><ref bean="connectionFactory"/></constructor-arg>
    <constructor-arg index="1"><ref bean="dataSourcePool"/></constructor-arg>
    <constructor-arg index="2"><null/></constructor-arg>
    <constructor-arg index="3"><null/></constructor-arg>
    <constructor-arg index="4"><value>false</value></constructor-arg>
    <constructor-arg index="5"><value>true</value></constructor-arg>
  </bean>

  <bean id="pooledDataSource" class="org.apache.commons.dbcp.PoolingDataSource" depends-on="poolableConnectionFactory">
    <constructor-arg><ref bean="dataSourcePool"/></constructor-arg>
  </bean>



  <!-- Transaction manager for iBATIS. Not needed. iBatis has <transactionManager type="EXTERNAL"/> -->
  <!--
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="pooledDataSource"/>
  </bean>
  -->

  <!-- iBatis -->
  <!-- http://static.springframework.org/spring/docs/2.5.x/reference/orm.html#orm-ibatis  -->
  <bean id="sqlMap" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    <property name="dataSource" ref="pooledDataSource"/>
    <property name="configLocation" value="ibatis-maps/SqlMapConfig2.xml"/>
  </bean>
  <alias alias="iBatis" name="sqlMap"/>




  <!-- Hibernate -->


  <!-- JPA - Hibernate -->
  <!-- See: http://blog.springsource.com/2006/05/30/getting-started-with-jpa-in-spring-20/ -->
  <!-- Docs: http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html -->
  <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="persistenceUnitName" value="ISIR_PU"/>
    <!-- SnaÅ¾Ã­m se, aby to netahalo z persistence.xml: -->
    <property name="dataSource" ref="pooledDataSource"/>
    <property name="jpaVendorAdapter">
      <!-- Docs: http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.html -->
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
         <property name="showSql" value="${hibernate.showSql}" />
         <property name="generateDdl" value="false" />
         <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
      </bean>
    </property>
  </bean>

  <!-- Transaction Manager for JPA. -->
  <bean id="myTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="emf"/>
    <!-- <prop key="dataSource" ref="dataSource"/>  Taken from emf. -->
    <property name="jpaDialect">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
    </property>
  </bean>



  <!-- Transaction by AOP -->
  <aop:config>
    <!-- DAO -->
    <aop:pointcut id="daoServiceMethods" expression="execution(* org.jboss.jawabot.dao.*.*(..))"/>
    <!-- Actions -->
    <aop:pointcut id="actionMethods" expression="execution(* org.jboss.jawabot.actions.*.*(..))"/>
    <!-- Tests -->
    <aop:pointcut id="testMethods" expression="execution(* org.jboss.jawabot.test.*.*(..))"/>

    <!-- Flush Hibernate before any iBatis operation. -->
    <!--
    <aop:pointcut id="ibatisC" expression="execution(* org.springframework.orm.ibatis.SqlMapClient.insert(..))"/>
    <aop:pointcut id="ibatisR" expression="execution(* org.springframework.orm.ibatis.SqlMapClient.query(..))"/>
    <aop:pointcut id="ibatisU" expression="execution(* org.springframework.orm.ibatis.SqlMapClient.update(..))"/>
    <aop:pointcut id="ibatisD" expression="execution(* org.springframework.orm.ibatis.SqlMapClient.delete(..))"/>
    -->

    <aop:advisor advice-ref="txAdvice" pointcut-ref="daoServiceMethods"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="actionMethods"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="testMethods"/>


    <!-- Flush Hibernate before any iBatis operation. -->
    <!--
    <aop:advisor advice-ref="hibernateFlush" pointcut-ref="ibatisC"/>
    <aop:advisor advice-ref="hibernateFlush" pointcut-ref="ibatisR"/>
    <aop:advisor advice-ref="hibernateFlush" pointcut-ref="ibatisU"/>
    <aop:advisor advice-ref="hibernateFlush" pointcut-ref="ibatisD"/>
    -->
    
  </aop:config>

  <bean id="hibernateFlush" class="cz.dynawest.util.HibernateFlushAdvice">
    <property name="entityManagerFactory" ref="emf"/>
  </bean>

  <tx:advice id="txAdvice" transaction-manager="myTxManager">
    <tx:attributes>
      <!-- all methods starting with 'get' are read-only -->
      <tx:method name="get*" read-only="true"/>
      <!-- other methods use the default transaction settings (see below) -->
      <tx:method name="*"/> <!--  propagation="REQUIRED" - default -->
    </tx:attributes>
  </tx:advice>



    
</beans>